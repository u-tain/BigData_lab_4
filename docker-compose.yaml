version: '3.10'

services:
  zookeeper:
       image: confluentinc/cp-zookeeper:7.3.2
       container_name: zookeeper
       networks:
        customnetwork:
          ipv4_address: ${zookeeper_ip}
       environment:
           ZOOKEEPER_CLIENT_PORT: 2181        
  kafka:
       image: confluentinc/cp-kafka:7.3.2
       container_name: kafka
       networks:
        customnetwork:
          ipv4_address: ${kafka_ip}
       ports:
           - "${port_kafka}:${port_kafka}"
       depends_on:
           - zookeeper
       environment:
           KAFKA_BROKER_ID: 1
           KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
           KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
           KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
           KAFKA_LISTENERS: INTERNAL://:${port_kafka}
           KAFKA_ADVERTISED_LISTENERS: INTERNAL://${kafka_ip}:${port_kafka}
           KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT
          
  kafka-topics-generator:
       image: confluentinc/cp-kafka:7.3.2
       container_name: kafka-topics-generator
       networks:
        customnetwork:
          ipv4_address: ${topics_ip}
       depends_on:
           - kafka
       command: >
           bash -c
             "sleep 5s &&
             kafka-topics --create --topic=kafka-predictions --if-not-exists --bootstrap-server=${kafka_ip}:${port_kafka}"
  kafka-consumer:
       image: confluentinc/cp-kafka:7.3.2
       networks:
        customnetwork:
          ipv4_address: ${consumer_ip}
       container_name: kafka-consumer
       command: >
           bash -c
             "kafka-console-consumer --bootstrap-server ${kafka_ip}:${port_kafka} --topic kafka-pred --from-beginning"
  database:
    container_name: database
    image:  bitnami/clickhouse:latest
    ports:
      - "8123:8123"
    networks:
      customnetwork:
        ipv4_address: ${ip_db}
    ulimits:
      nofile: 262144
    environment:
      CLICKHOUSE_DB: ${name_db}
      CLICKHOUSE_USER: ${user} 
      CLICKHOUSE_PASSWORD: ${pass}
      DEFAULT_SESSION_TIMEOUT: 120
    volumes:
      - ./database/config.xml:/etc/config.xml

  app:
    container_name: app
    build:
      context: .
      dockerfile: ./Dockerfile
    networks:
      customnetwork:
        ipv4_address: ${app_ip}
    volumes:
      - .:/app
    depends_on:
      - database

networks:
  customnetwork:
    driver: bridge
    ipam:
      config:
        - subnet: ${ip_net}
